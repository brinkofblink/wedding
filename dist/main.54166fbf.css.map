{"version":3,"sources":["css/tokens/animations.scss","css/common/typography.scss","../node_modules/modern-css-reset/src/reset.css","css/common/base.scss","css/tokens/vars.scss","../node_modules/breakpoint-sass/stylesheets/_breakpoint.scss","css/tokens/typography.scss","css/common/utilities.scss","css/components/buttons.scss","css/tokens/buttons.scss","css/components/stars.scss","css/layout/footer.scss","css/pages/home.scss"],"names":[],"mappings":"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","file":"main.54166fbf.css","sourceRoot":"../src","sourcesContent":["/* ----------------------------------------------\n * Generated by Animista on 2020-10-12 11:41:19\n * Licensed under FreeBSD License.\n * See http://animista.net/license for more info.\n * w: http://animista.net, t: @cssanimista\n * ---------------------------------------------- */\n\n/**\n * ----------------------------------------\n * animation slide-in-right\n * ----------------------------------------\n */\n\n@keyframes slide-in-right {\n  0% {\n    transform: translateX(1000px);\n    opacity: 0;\n  }\n  100% {\n    transform: translateX(0);\n    opacity: 1;\n  }\n}\n\n@keyframes rotate-in-center {\n  0% {\n    transform: rotate(-45deg);\n    opacity: 0;\n  }\n  100% {\n    transform: rotate(0);\n    opacity: 1;\n  }\n}\n\n@keyframes fade-blur {\n  0% {\n    backdrop-filter: blur(0);\n    opacity: 0;\n  }\n  100% {\n    backdrop-filter: blur(10px);\n    opacity: 1;\n  }\n}\n\n@keyframes fade-in {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n","@import url('https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,300;0,500;1,300;1,500&display=swap');\n\nhtml {\n  font-size: 100%;\n\n  @include mobile-and-tablet {\n    font-size: 14px;\n  }\n}\n\nbody {\n  hyphens: none;\n  font-family: $font;\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap;\n  color: c(black);\n}\n\na {\n  color: inherit;\n}\n\n\n@each $value, $key in $font-sizes {\n  .t-#{$value} {\n    @include font-size(map-get($key, font-size));\n  }\n}\n\nbody {\n  @include font-size(base);\n}\n\nh1,\nh2,\nh3,\nh4,\nh5 {\n  margin: 2.75rem 0 1.05rem;\n  line-height: 1.15;\n  font-style: normal;\n  font-weight: 500;\n}\n\nmain {\n  h1,\n  h2,\n  h3,\n  h4,\n  h5 {\n    margin: 0;\n    & + p {\n      margin-top: 0.525rem;\n    }\n  }\n}\n\nmain {\n  * + h1,\n  * + h2,\n  * + h3,\n  * + h4,\n  * + h5 {\n    margin-top: 1.15rem;\n  }\n}\n\nh1 {\n  @include font-size(xlarge);\n}\n\nh2 {\n  @include font-size(large);\n  font-weight: 500;\n}\n\nh3 {\n  @include font-size(large);\n}\n\nh4 {\n  @include font-size(large);\n}\n\nh5 {\n  @include font-size(medium);\n}\n\nsmall,\n.text_small {\n  @include font-size(xsmall);\n}\n\n.capitalise {\n  text-transform: capitalize;\n}\n\np {\n  max-width: 60ch;\n}\n\nul {\n  padding-left: 0;\n}","/* Box sizing rules */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\n/* Remove default padding */\nul[class],\nol[class] {\n  padding: 0;\n}\n\n/* Remove default margin */\nbody,\nh1,\nh2,\nh3,\nh4,\np,\nul[class],\nol[class],\nfigure,\nblockquote,\ndl,\ndd {\n  margin: 0;\n}\n\n/* Set core root defaults */\nhtml {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  text-rendering: optimizeSpeed;\n  line-height: 1.5;\n}\n\n/* Remove list styles on ul, ol elements with a class attribute */\nul[class],\nol[class] {\n  list-style: none;\n}\n\n/* A elements that don't have a class get default styles */\na:not([class]) {\n  text-decoration-skip-ink: auto;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Natural flow and rhythm in articles by default */\narticle > * + * {\n  margin-top: 1em;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Blur images when they have no alt attribute */\nimg:not([alt]) {\n  filter: blur(10px);\n}\n\n/* Remove all animations and transitions for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}\n","::selection {\n\n}\n\nbody {\n  min-height: 100vh;\n  /* mobile viewport bug fix */\n  min-height: -webkit-fill-available;\n  display: flex;\n  max-width: 100vw;\n  background-color: c(blue);\n}\n\nhtml {\n  height: -webkit-fill-available;\n}\n\n.wrap {\n  @include container();\n  @include tablet {\n  }\n}\n\n.outer-wrap:focus {\n  outline: none;\n}\n\n.skip-link {\n  color: white;\n  margin-bottom: 1rem;\n  display: block;\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  clip-path: inset(50%);\n  white-space: nowrap;\n\n  &:focus {\n    position: static;\n    width: auto;\n    height: auto;\n    overflow: visible;\n    clip: auto;\n    clip-path: none;\n    white-space: inherit;\n  }\n}\n\nimg {\n  max-width: 100%;\n  display: block;\n  height: auto;\n}\n\ncanvas {\n  animation: fade-blur $transition both;\n}\n\n.pad-l {\n  padding-left: 2rem;\n  @include desktop-s {\n    padding-left: 4rem;\n  }\n}\n\nimg {\n  &.lazyload {\n    opacity: 0;\n  }\n  &.loaded {\n    animation: fade-in $transition both;\n  }\n}","@import '~breakpoint-sass/stylesheets/_breakpoint.scss';\n// --- variables ---\n\n// sizing\n$rem: 16px;\n$p:   1.5rem;\n\n$x-pad-mobile: 2rem;\n$x-pad-desktop: 6rem;\n\n$header: 10rem;\n\n$border-radius: 0.2rem;\n\n// breakpoints\n// breakpoints\n$breakpoint-first: \"tablet\";\n$breakpoints: (\n  \"tablet\":  620,\n  \"s-desktop\": 768,\n  \"desktop\": 1100,\n  \"l-desktop\": 1200,\n  \"massive\": 1600,\n);\n\n\n// transitions\n$transition: 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940);\n\n// etc\n$max: 99999px;\n\n// --- mixins & functions ---\n\n// breakpoints\n\n@function bp($size) {\n  @return map-get($breakpoints, $size) * 1px;\n}\n@mixin mq($size) {\n  @include breakpoint(bp($size)) { @content; }\n}\n\n@mixin mobile {\n  @include breakpoint(max-width (bp($breakpoint-first) - 1px)) {\n    @content;\n  }\n}\n@mixin tablet {\n  @include breakpoint(bp(tablet))  { @content; }\n}\n@mixin mobile-and-tablet {\n  @include breakpoint(max-width (bp(desktop) - 1px)) {\n    @content;\n  }\n}\n@mixin desktop-s {\n  @include breakpoint(bp(s-desktop)) { @content; }\n}\n@mixin desktop {\n  @include breakpoint(bp(desktop)) { @content; }\n}\n@mixin desktop-l {\n  @include breakpoint(bp(l-desktop)) { @content; }\n}\n@mixin massive {\n  @include breakpoint(bp(massive)) { @content; }\n}\n\n@mixin container {\n  @include mq($breakpoint-first) {\n    display: block;\n    width: 100%;\n    margin-left: auto;\n    margin-right: auto;\n    position: relative;\n  }\n  max-width: bp(massive);\n}\n\n// transitions\n\n@mixin animate($props...) {\n  $transitions: ();\n  @each $prop in $props {\n    $transitions: append($transitions, $prop $transition, comma);\n  }\n\n  transition: $transitions;\n}\n\n\n// visibility\n\n@mixin nav-toggled {\n  html[data-nav-toggled=\"1\"] & {\n    @include mobile {\n      @content;\n    }\n  }\n}\n\n@mixin sr-only {\n  font-size: 1px;\n  position: absolute;\n  top: -$max;\n  left: -$max;\n}\n\n@mixin button-height {\n  height: 3.5rem;\n  @include desktop-s {\n    height: 2.2rem;\n  }\n}","//////////////////////////////\n// Default Variables\n//////////////////////////////\n$Breakpoint-Settings: (\n  'default media': all,\n  'default feature': min-width,\n  'default pair': width,\n\n  'force all media type': false,\n  'to ems': false,\n  'transform resolutions': true,\n\n  'no queries': false,\n  'no query fallbacks': false,\n\n  'base font size': 16px,\n\n  'legacy syntax': false\n);\n\n$breakpoint: () !default;\n\n//////////////////////////////\n// Imports\n//////////////////////////////\n@import \"breakpoint/settings\";\n@import 'breakpoint/context';\n@import 'breakpoint/helpers';\n@import 'breakpoint/parsers';\n@import 'breakpoint/no-query';\n\n@import 'breakpoint/respond-to';\n\n@import \"breakpoint/legacy-settings\";\n\n//////////////////////////////\n// Breakpoint Mixin\n//////////////////////////////\n\n@mixin breakpoint($query, $no-query: false) {\n  @include legacy-settings-warning;\n\n  // Reset contexts\n  @include private-breakpoint-reset-contexts();\n\n  $breakpoint: breakpoint($query, false);\n\n  $query-string: map-get($breakpoint, 'query');\n  $query-fallback: map-get($breakpoint, 'fallback');\n\n  $private-breakpoint-context-holder: map-get($breakpoint, 'context holder') !global;\n  $private-breakpoint-query-count: map-get($breakpoint, 'query count') !global;\n\n  // Allow for an as-needed override or usage of no query fallback.\n  @if $no-query != false {\n    $query-fallback: $no-query;\n  }\n\n  @if $query-fallback != false {\n    $context-setter: private-breakpoint-set-context('no-query', $query-fallback);\n  }\n\n  // Print Out Query String\n  @if not breakpoint-get('no queries') {\n    @media #{$query-string} {\n      @content;\n    }\n  }\n\n  @if breakpoint-get('no query fallbacks') != false or breakpoint-get('no queries') == true {\n\n    $type: type-of(breakpoint-get('no query fallbacks'));\n    $print: false;\n\n    @if ($type == 'bool') {\n      $print: true;\n    }\n    @else if ($type == 'string') {\n      @if $query-fallback == breakpoint-get('no query fallbacks') {\n        $print: true;\n      }\n    }\n    @else if ($type == 'list') {\n      @each $wrapper in breakpoint-get('no query fallbacks') {\n        @if $query-fallback == $wrapper {\n          $print: true;\n        }\n      }\n    }\n\n    // Write Fallback\n    @if ($query-fallback != false) and ($print == true) {\n      $type-fallback: type-of($query-fallback);\n\n      @if ($type-fallback != 'bool') {\n        #{$query-fallback} & {\n          @content;\n        }\n      }\n      @else {\n        @content;\n      }\n    }\n  }\n\n  @include private-breakpoint-reset-contexts();\n}\n\n\n@mixin mq($query, $no-query: false) {\n  @include breakpoint($query, $no-query) {\n    @content;\n  }\n}\n","@import \"vars\";\n@import \"colours\";\n\n$font: 'Raleway', sans-serif;\n\n$light: 300;\n$roman: 400;\n$medium: 500;\n\n$font-sizes: (\n  'xsmall': (font-size: 13.33, line-height: 1.5),\n  'small': (font-size: 15, line-height: 1.5),\n  'base': (font-size: 16, line-height: 1.5),\n  'medium': (font-size: 18, line-height: 1.15),\n  'large': (font-size: 19.2, line-height: 1.15),\n  'xlarge': (font-size: 23.04, line-height: 1.5),\n  'xxlarge': (font-size: 27.64, line-height: 1.15),\n\t'xxxlarge': (font-size: 33.18, line-height: 1.15),\n\t'xxxxlarge': (font-size: 39.81, line-height: 1.15),\n  );\n  @mixin font-size($size) {\n    $font-size-properties: map-get($font-sizes, $size);\n\n    @if $font-size-properties {\n      @include font-size(map-get($font-size-properties, font-size));\n      line-height: map-get($font-size-properties, line-height);\n    } @else {\n      font-size: #{$size}px;\n      font-size: #{$size / 16}rem;\n    }\n  }",".list-reset {\n  list-style: none;\n}\n\n.pad-v {\n  padding-top: 2rem;\n  padding-bottom: 2rem;\n}\n.pad-h {\n  padding-left: 2rem;\n  padding-right: 2rem;\n}\n\n.wrap {\n  width: 100%;\n  @include desktop-s {\n    width: 100%;\n  }\n  margin-right: auto;\n  margin-left: auto;\n  max-width: 1600px;\n  position: relative;\n}\n\n// For use on spans inside links.\n.expander {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background-color: transparent;\n  transition: background 0.2s ease;\n  &:hover {\n    background-color: rgba(white, 0.2);\n  }\n}\n\n.visually-hidden {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  clip-path: inset(50%);\n  white-space: nowrap;\n  + * {\n    margin-top: 0;\n  }\n}\n\n.hide-mobile {\n  display: block;\n  @include mobile {\n    display: none;\n  }\n}\n\n.hide-desktop {\n  display: block;\n  @include tablet {\n    display: none;\n  }\n}\n\n.slide-in-right {\n  animation: slide-in-right 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n}",".button {\n  @include button();\n  span {\n    margin-right: 1ch;\n    // color: var(--highlightColour2);\n  }\n}\n\n[class*=\"bg-\"] .button.button--big {\n    @include font-size(large);\n}","@import \"vars\";\n@import \"typography\";\n@import \"colours\";\n\n@mixin button($background: white, $colour: #333, $border: false) {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n  background-color: $background;\n  color: $colour;\n  text-decoration: none;\n  padding: 0.6em 1.6em 0.7em 1.6em;\n  margin: 0.5em 0;\n  border-radius: 2px;\n  box-shadow: inset 0 0 3px rgba(#222, 0.2);\n  border: none;\n  line-height: 1.4;\n  @include button-height;\n  width: max-content;\n  cursor: pointer;\n  @include font-size(xsmall);\n  font-weight: $medium;\n  @if $border {\n    border: 1px solid $border;\n  }\n  transition: background 0.2s ease, transform 0.2s ease;\n  &:hover {\n      filter: brightness(1.2);\n  }\n  &:focus {\n    text-decoration: underline;\n    transform: scale(1.05);\n  }\n}","\n.stars {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n}",".footer {\n  display: flex;\n  justify-content: center;\n  ul {\n    display: inline-flex;\n    justify-content: center;\n    list-style: none;\n  }\n  li {\n    margin: 0 1rem;\n  }\n}","\n.main {\n  display: grid;\n  grid-template-rows: 10rem 1fr 1.5rem 1.5rem 1.5rem 1.5rem 1.5rem 1.5rem 3rem;\n  grid-template-columns: 1fr 1.2fr 1fr;\n}\n\n.text-box {\n  grid-column: 2;\n  grid-row: 2/-1;\n  background-color: white;\n  position: relative;\n  z-index: 1;\n  text-align: center;\n  border: 0.6rem solid c(blue);\n  h1 {\n    font-family: serif;\n    font-size: 1.2rem;\n  }\n}\n\n\n.waves {\n  background-image: url(\"~/img/wave.svg\");\n  background-size: contain;\n  background-repeat: repeat-x;\n  left: 0;\n  height: 8rem;\n  width: 100vw;\n  grid-column: 1 / 4;\n  z-index: 1;\n}\n\n.stars {\n  background-image: url(\"~/img/stars.svg\");\n  background-size: contain;\n  background-repeat: repeat-x;\n  grid-column: 1 / 4;\n  grid-row: 1 / -1;\n  z-index: 0;\n}\n\n.waves-1 {\n  grid-row: 4 / span 2;\n}\n.waves-2 {\n  grid-row: 6 / span 2;\n  background-position: 50px;\n}\n.waves-3 {\n  grid-row: 8 / span 2;\n}"]}